# knuth moris pratt algorithm
import time
def LSPtable(pattern):
    n=len(pattern)
    l=[0]*n
    j=0
    for i in range(1,n):
        while j>0 and pattern[i]!=pattern[j]:
            j=l[j-1]
        if pattern[i]==pattern[j]:
            l[i]=j+1
            j+=1
        else:
            l[i]=0
    return l
def KMPsearch(pattern,string):
    lsp=LSPtable(pattern)
    j=0
    for i in range(len(string)):
        while j>0 and string[i]!=pattern[j]:
            j=lsp[j-1]

        if string[i]==pattern[j]:
            j+=1
            if j== len(pattern):
                return i-j+1
    return -1
start=time.time()
pattern="ababab"
string="akjsdhfkjdkashfskjsdhfkababab"
print(KMPsearch(pattern,string))
print((time.time()-start)*1000)
start=time.time()
for i in range(len(string)-len(pattern)):
    x=string[i:i+len(pattern)]
    if x==pattern:
        print(i)
        break

print((time.time()-start)*1000)


